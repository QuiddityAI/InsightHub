# Generated by Django 4.2.4 on 2023-08-25 10:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalOrganization',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Organization',
                'verbose_name_plural': 'historical Organizations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EmbeddingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
            ],
            options={
                'verbose_name': 'Embedding Space',
                'verbose_name_plural': 'Embedding Spaces',
            },
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('input_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='TEXT', max_length=50, verbose_name='Input Type')),
                ('input_is_array', models.BooleanField(default=False, verbose_name='Input is array / can be multiple')),
                ('output_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='VECTOR', max_length=50, verbose_name='Output Type')),
                ('output_is_array', models.BooleanField(default=False, verbose_name='Output is array / can be multiple')),
                ('embedding_space', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='data_map_backend.embeddingspace', verbose_name='Embedding Space')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('input_description', models.TextField(blank=True, null=True, verbose_name='Input Description')),
                ('output_description', models.TextField(blank=True, null=True, verbose_name='Output Description')),
                ('parameter_description', models.TextField(blank=True, null=True, verbose_name='Parameter Description')),
            ],
            options={
                'verbose_name': 'Generator',
                'verbose_name_plural': 'Generators',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('members', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Members')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='ObjectSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='data_map_backend.organization', verbose_name='Organization')),
                ('name_plural', models.CharField(max_length=200, verbose_name='Name (Plural)')),
            ],
            options={
                'verbose_name': 'Object Schema',
                'verbose_name_plural': 'Object Schemas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmbeddingSpace',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Embedding Space',
                'verbose_name_plural': 'historical Embedding Spaces',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGenerator',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('input_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='TEXT', max_length=50, verbose_name='Input Type')),
                ('input_is_array', models.BooleanField(default=False, verbose_name='Input is array / can be multiple')),
                ('output_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='VECTOR', max_length=50, verbose_name='Output Type')),
                ('output_is_array', models.BooleanField(default=False, verbose_name='Output is array / can be multiple')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('embedding_space', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.embeddingspace', verbose_name='Embedding Space')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('input_description', models.TextField(blank=True, null=True, verbose_name='Input Description')),
                ('output_description', models.TextField(blank=True, null=True, verbose_name='Output Description')),
                ('parameter_description', models.TextField(blank=True, null=True, verbose_name='Parameter Description')),
            ],
            options={
                'verbose_name': 'historical Generator',
                'verbose_name_plural': 'historical Generators',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObjectField',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('identifier', models.CharField(max_length=200, verbose_name='Identifier')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='TEXT', max_length=50, verbose_name='Type')),
                ('is_array', models.BooleanField(default=False, verbose_name='Is array')),
                ('is_required', models.BooleanField(default=False, verbose_name='Required')),
                ('should_be_generated', models.BooleanField(default=False, help_text='Should be generated for new elements and when source fields are updated, not automatically generated for exisitng elements', verbose_name='Should be generated')),
                ('generating_condition', models.CharField(blank=True, max_length=200, null=True, verbose_name='Generating Condition')),
                ('is_available_for_search', models.BooleanField(default=False, verbose_name='Available for fuzzy text or vector search')),
                ('is_available_for_filtering', models.BooleanField(default=False, verbose_name='Available for filtering')),
                ('_order', models.IntegerField(editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('generator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.generator', verbose_name='Generator')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('schema', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.objectschema', verbose_name='Schema')),
                ('generator_parameters', models.CharField(blank=True, max_length=200, null=True, verbose_name='Generator Parameters')),
            ],
            options={
                'verbose_name': 'historical Object Field',
                'verbose_name_plural': 'historical Object Fields',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ObjectField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=200, verbose_name='Identifier')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element')], default='TEXT', max_length=50, verbose_name='Type')),
                ('is_array', models.BooleanField(default=False, verbose_name='Is array')),
                ('is_required', models.BooleanField(default=False, verbose_name='Required')),
                ('should_be_generated', models.BooleanField(default=False, help_text='Should be generated for new elements and when source fields are updated, not automatically generated for exisitng elements', verbose_name='Should be generated')),
                ('generating_condition', models.CharField(blank=True, max_length=200, null=True, verbose_name='Generating Condition')),
                ('is_available_for_search', models.BooleanField(default=False, verbose_name='Available for fuzzy text or vector search')),
                ('is_available_for_filtering', models.BooleanField(default=False, verbose_name='Available for filtering')),
                ('generator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='data_map_backend.generator', verbose_name='Generator')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_map_backend.objectschema', verbose_name='Schema')),
                ('source_fields', models.ManyToManyField(blank=True, to='data_map_backend.objectfield', verbose_name='Source Fields')),
                ('generator_parameters', models.CharField(blank=True, max_length=200, null=True, verbose_name='Generator Parameters')),
            ],
            options={
                'verbose_name': 'Object Field',
                'verbose_name_plural': 'Object Fields',
                'order_with_respect_to': 'schema',
            },
        ),
        migrations.CreateModel(
            name='HistoricalObjectSchema',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.organization', verbose_name='Organization')),
                ('name_plural', models.CharField(max_length=200, verbose_name='Name (Plural)')),
            ],
            options={
                'verbose_name': 'historical Object Schema',
                'verbose_name_plural': 'historical Object Schemas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
