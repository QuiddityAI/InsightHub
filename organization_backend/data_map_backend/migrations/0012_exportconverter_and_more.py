# Generated by Django 5.0.4 on 2024-05-07 09:20

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_map_backend', '0011_remove_historicaltrainedclassifier_collection_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExportConverter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=200, verbose_name='Name')),
                ('identifier', models.CharField(max_length=200, verbose_name='Identifier')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('module', models.CharField(max_length=200, verbose_name='Code Module Name')),
                ('parameters', models.JSONField(blank=True, default=dict, null=True, verbose_name='Parameters')),
                ('preview_as_text', models.BooleanField(default=False, help_text='If the result should be shown in the UI as text in addition to a download link', verbose_name='Preview as text')),
            ],
            options={
                'verbose_name': 'Export Converter',
                'verbose_name_plural': 'Export Converters',
            },
        ),
        migrations.RenameField(
            model_name='historicalimportconverter',
            old_name='name',
            new_name='display_name',
        ),
        migrations.RenameField(
            model_name='importconverter',
            old_name='name',
            new_name='display_name',
        ),
        migrations.AddField(
            model_name='historicalimportconverter',
            name='identifier',
            field=models.CharField(default='todo', max_length=200, verbose_name='Identifier'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='importconverter',
            name='identifier',
            field=models.CharField(default='todo', max_length=200, verbose_name='Identifier'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='dataset',
            name='source_plugin',
            field=models.CharField(choices=[('INTERNAL_OPENSEARCH_QDRANT', 'Internal DB (OpenSearch + Qdrant)'), ('REMOTE_DATASET', 'Remote Visual Data Map Dataset'), ('BRAVE_WEB_API', 'Brave Web Search API'), ('BING_WEB_API', 'Bing Web Search API'), ('SEMANTIC_SCHOLAR_API', 'Semantic Scholar API')], default='INTERNAL_OPENSEARCH_QDRANT', max_length=50, verbose_name='Source Plugin'),
        ),
        migrations.AlterField(
            model_name='historicaldataset',
            name='source_plugin',
            field=models.CharField(choices=[('INTERNAL_OPENSEARCH_QDRANT', 'Internal DB (OpenSearch + Qdrant)'), ('REMOTE_DATASET', 'Remote Visual Data Map Dataset'), ('BRAVE_WEB_API', 'Brave Web Search API'), ('BING_WEB_API', 'Bing Web Search API'), ('SEMANTIC_SCHOLAR_API', 'Semantic Scholar API')], default='INTERNAL_OPENSEARCH_QDRANT', max_length=50, verbose_name='Source Plugin'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='applicable_export_converters',
            field=models.ManyToManyField(blank=True, related_name='+', to='data_map_backend.exportconverter', verbose_name='Applicable Export Converters'),
        ),
        migrations.CreateModel(
            name='HistoricalExportConverter',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('display_name', models.CharField(max_length=200, verbose_name='Name')),
                ('identifier', models.CharField(max_length=200, verbose_name='Identifier')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('module', models.CharField(max_length=200, verbose_name='Code Module Name')),
                ('parameters', models.JSONField(blank=True, default=dict, null=True, verbose_name='Parameters')),
                ('preview_as_text', models.BooleanField(default=False, help_text='If the result should be shown in the UI as text in addition to a download link', verbose_name='Preview as text')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Export Converter',
                'verbose_name_plural': 'historical Export Converters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
