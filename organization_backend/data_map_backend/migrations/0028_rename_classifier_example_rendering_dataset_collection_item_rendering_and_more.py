# Generated by Django 5.0.2 on 2024-02-22 12:35

import data_map_backend.models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_map_backend', '0027_collectionitem_changed_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='dataset',
            old_name='classifier_example_rendering',
            new_name='collection_item_rendering',
        ),
        migrations.RenameField(
            model_name='datasetspecificsettingsofcollection',
            old_name='classifier',
            new_name='collection',
        ),
        migrations.RenameField(
            model_name='historicaldataset',
            old_name='classifier_example_rendering',
            new_name='collection_item_rendering',
        ),
        migrations.RenameField(
            model_name='historicaldatasetspecificsettingsofcollection',
            old_name='classifier',
            new_name='collection',
        ),
        migrations.RemoveField(
            model_name='datacollection',
            name='trained_classifiers',
        ),
        migrations.RemoveField(
            model_name='historicaldatacollection',
            name='trained_classifiers',
        ),
        migrations.AlterField(
            model_name='datacollection',
            name='class_names',
            field=models.JSONField(blank=True, default=data_map_backend.models.class_field_default, help_text='Minimal list of classes shown in the UI, even if no items are present. More classes are deducted from items.', null=True, verbose_name='Class Names'),
        ),
        migrations.AlterField(
            model_name='historicaldatacollection',
            name='class_names',
            field=models.JSONField(blank=True, default=data_map_backend.models.class_field_default, help_text='Minimal list of classes shown in the UI, even if no items are present. More classes are deducted from items.', null=True, verbose_name='Class Names'),
        ),
        migrations.AlterUniqueTogether(
            name='datasetspecificsettingsofcollection',
            unique_together={('collection', 'dataset')},
        ),
        migrations.CreateModel(
            name='HistoricalTrainedClassifier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(blank=True, editable=False, verbose_name='Changed at')),
                ('class_name', models.CharField(max_length=200, verbose_name='Class')),
                ('decision_vector', models.JSONField(blank=True, null=True, verbose_name='decision_vector')),
                ('highest_score', models.FloatField(blank=True, null=True, verbose_name='Highest Score')),
                ('threshold', models.FloatField(default=0.5, verbose_name='Threshold')),
                ('metrics', models.JSONField(blank=True, default=dict, null=True, verbose_name='Metrics')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.datacollection', verbose_name='Collection')),
                ('embedding_space', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data_map_backend.embeddingspace', verbose_name='Embedding Space')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Trained Classifier',
                'verbose_name_plural': 'historical Trained Classifiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TrainedClassifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('class_name', models.CharField(max_length=200, verbose_name='Class')),
                ('decision_vector', models.JSONField(blank=True, null=True, verbose_name='decision_vector')),
                ('highest_score', models.FloatField(blank=True, null=True, verbose_name='Highest Score')),
                ('threshold', models.FloatField(default=0.5, verbose_name='Threshold')),
                ('metrics', models.JSONField(blank=True, default=dict, null=True, verbose_name='Metrics')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trained_classifiers', to='data_map_backend.datacollection', verbose_name='Collection')),
                ('embedding_space', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='data_map_backend.embeddingspace', verbose_name='Embedding Space')),
            ],
            options={
                'verbose_name': 'Trained Classifier',
                'verbose_name_plural': 'Trained Classifiers',
                'unique_together': {('collection', 'class_name', 'embedding_space')},
            },
        ),
    ]
