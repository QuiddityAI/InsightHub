# Generated by Django 5.0.6 on 2024-05-12 18:40

import data_map_backend.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_map_backend', '0015_alter_serviceusage_limit_per_period_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='collectionitem',
            old_name='extraction_answers',
            new_name='column_data',
        ),
        migrations.AlterField(
            model_name='collectionitem',
            name='column_data',
            field=models.JSONField(blank=True, default=dict, help_text='Extracted answers, notes, etc.', null=True, verbose_name='Column Data'),
        ),
        migrations.CreateModel(
            name='CollectionColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created at')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Changed at')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('identifier', models.CharField(default=data_map_backend.models.get_random_string, max_length=200, verbose_name='Identifier')),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('IDENTIFIER', 'Identifier'), ('FLOAT', 'Float'), ('INTEGER', 'Integer'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('TIME', 'Time'), ('VECTOR', 'Vector'), ('CLASS_PROBABILITY', 'Class Probability'), ('FACE', 'Face'), ('URL', 'URL'), ('GEO_COORDINATES', 'Geo Coordinates'), ('TAG', 'Tag'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('FOREIGN_KEY', 'Reference to other element'), ('BOOL', 'Bool'), ('ATTRIBUTES', 'Attributes (dict)'), ('ARBITRARY_OBJECT', 'Non-indexed object'), ('CHUNK', 'Text Chunk with Metadata')], default='TEXT', max_length=50, verbose_name='Type')),
                ('expression', models.TextField(blank=True, help_text='Question / Prompt / Math / Code expression to generate this column', null=True, verbose_name='Expression')),
                ('source_fields', models.JSONField(blank=True, default=list, help_text='List of source fields to be used for this column', null=True, verbose_name='Source Fields')),
                ('module', models.CharField(blank=True, max_length=200, null=True, verbose_name='Code Module Name')),
                ('parameters', models.JSONField(blank=True, default=dict, null=True, verbose_name='Parameters')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='data_map_backend.datacollection', verbose_name='Collection')),
            ],
            options={
                'verbose_name': 'Collection Column',
                'verbose_name_plural': 'Collection Columns',
                'order_with_respect_to': 'collection',
                'unique_together': {('collection', 'identifier')},
            },
        ),
    ]
