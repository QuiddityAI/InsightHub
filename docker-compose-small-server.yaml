services:
  model-server:
    image: visual_data_map/model_server
    build:
      context: ./
      dockerfile: ./docker/model_server.Dockerfile
    volumes:
      - ./:/source_code/
      - /data:/data
      - model_server_cache:/home/appuser/.cache/
    # ports:  # expose port outside of this virtual network
    #   - "55180:55180"
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           capabilities: [gpu]
  organization-backend:
    image: visual_data_map/organization_backend
    build:
      context: ./
      dockerfile: ./docker/organization_backend.Dockerfile
    volumes:
      - ./:/source_code/
    # ports:  # expose port outside of this virtual network
    #   - "55125:55125"
    # Note: by default, the data-backend is and should not be accessible from the outside
    environment:
      - data_backend_host=http://data-backend:55123
      - postgres_host=postgres
      - BACKEND_AUTHENTICATION_SECRET
  data-backend:
    image: visual_data_map/data_backend
    build:
      context: ./
      dockerfile: ./docker/data_backend.Dockerfile
    volumes:
      - ./:/source_code/
      - /data:/data
    # ports:  # expose port outside of this virtual network
    #   - "55123:55123"
    # Note: this port is indirectly exposed through a proxy in the vite webserver
    depends_on:
      - organization-backend
    environment:
      - model_server_host=http://model-server:55180
      - infinity_server_host=http://infinity-model-server:55181
      - organization_backend_host=http://organization-backend:55125
      - vector_database_host=qdrant
      # - object_storage_host=mongo
      - search_engine_host=opensearch
      - ABSCLUST_TYPESENSE_DB_API_KEY
      - ABSCLUST_TYPESENSE_DB_HOST
      - BACKEND_AUTHENTICATION_SECRET
  webserver:
    image: visual_data_map/webserver
    build:
      context: ./frontend
      dockerfile: ../docker/webserver.Dockerfile
    volumes:
      - ./:/source_code/
    ports:  # this should be the only port in this docker compose setup that is exposed to the outside (except DB dashboards)
      - "55140:55140"
    environment:
      - organization_backend_host=http://organization-backend:55125
      - data_backend_host=http://data-backend:55123
  qdrant:
    image: "qdrant/qdrant:latest"
    volumes:
      - qdrant_storage:/qdrant/storage
    ports:  # expose port outside of this virtual network
      - "6333:6333"  # needed for qdrant web dashboard
  opensearch:
    image: "opensearchproject/opensearch:latest"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    # ports:  # expose port outside of this virtual network
    #   - "9200:9200"
    #   - "9600:9600"
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358,http://tim-desktop:1358
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD
  postgres:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=visdatamap
    ports:  # expose port outside of this virtual network
      - "5432:5432"
    # expose port to be able to use export scripts from outside the virtual network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:  # exposed to the outside, remember to use a secure password
      - 5601:5601
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
  infinity-model-server:
    image: michaelf34/infinity:latest
    # ports:  # expose port outside of this virtual network
    #   - 55181:55181
    volumes:
      - infinity_model_cache:/app/.cache/torch
    command: --model-name-or-path intfloat/e5-base-v2 --port 55181 --engine ctranslate2
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           capabilities: [gpu]
  grobid:
    image: lfoppiano/grobid:latest-develop
    init: true
    # ports:  # expose port outside of this virtual network
    #   - "127.0.0.1:8070:8070"
    #   - "127.0.0.1:8071:8071"
    environment:
      - grobid__3rdparty__pdf2xml__memory__limit__mb=4000
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "5000mb"
  # unstructured:
  #   image: unstructured-io/unstructured-api:latest
  #   ports:
  #     - "8000:55005"
  #   environment:
  #     - UNSTRUCTURED_API_KEY="visual_data_map"
volumes:
  model_server_cache:
  qdrant_storage:
  opensearch_data:
  postgres_data:
  infinity_model_cache:
networks:
  default:
    name: visualdatamapnetwork
