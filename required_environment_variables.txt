.env file in the root of this repo with the following variables:

GPU_IS_AVAILABLE=False

# change the default superuser credentials:
DJANGO_SUPERUSER_USERNAME=?
DJANGO_SUPERUSER_EMAIL=?
DJANGO_SUPERUSER_PASSWORD=?

BACKEND_AUTHENTICATION_SECRET= generate any random secret

BING_SEARCH_V7_SUBSCRIPTION_KEY=?
BING_SEARCH_V7_ENDPOINT=?

SEMANTIC_SCHOLAR_API_KEY=?

COHERE_API_KEY=?

OPENSEARCH_INITIAL_ADMIN_PASSWORD=?

COMPOSE_PROFILES=  # add https_proxy to also start the SWAG reverse proxy
SERVER_URL= e.g. something.absclust.com
SSL_CERT_EMAIL= email to notify about SSL certificate expiration

optionally, store data in local folder instead of /data:
Add this to the docker compose ovveride file:
services:
  backend:
    volumes:
      - "${DATA_PATH:-/data}:/data"
And this env variable:
DATA_PATH=./data

optionally, set IP where the containers should be available (e.g. 127.0.0.1 or 0.0.0.0) and
  port that is exposed outside the docker network:

WEBSERVER_EXPOSED_IP_V4=0.0.0.0
WEBSERVER_EXPOSED_IP_V6=[::]
WEBSERVER_STAGING_EXPOSED_IP_V4=127.0.0.1
WEBSERVER_STAGING_EXPOSED_IP_V6=[::]

QDRANT_EXPOSED_IP=127.0.0.1
QDRANT_EXPOSED_PORT=6333

POSTGRES_EXPOSED_PORT=5432

OPENSEARCH_DASHBOARD_EXPOSED_IP=127.0.0.1
OPENSEARCH_DASHBOARD_EXPOSED_PORT=5601

optionally, specify different docker compose file:
COMPOSE_FILE=docker-compose-staging.yaml:docker-compose.override.gpu.yaml

credentials.json file with the following content:
{
  "open_search_user": "?",
  "open_search_password": "?"  # password from above
}

For Telegram notifier to work, following env vars must be set:
TELEGRAM_TOKEN=
TELEGRAM_CHAT_ID=

# for website scraping with "UseScraper.com":
USE_SCRAPER_API_KEY=

LLMONKEY_OPENAI_API_KEY=
LLMONKEY_GROQ_API_KEY=
LLMONKEY_DEEPINFRA_API_KEY=
LLMONKEY_COHERE_API_KEY=

# for e-mail notifications e.g. on new items added to collections:
NOTIFICATION_EMAIL_ADDRESS=
NOTIFICATION_EMAIL_SMTP_HOST=smtp.gmail.com
NOTIFICATION_EMAIL_SMTP_PORT=465
NOTIFICATION_EMAIL_SMTP_USER=
NOTIFICATION_EMAIL_SMTP_PASSWORD=

# for LLM models using LLMonkey library:
LLMONKEY_OPENAI_API_KEY=
LLMONKEY_GROQ_API_KEY=
LLMONKEY_DEEPINFRA_API_KEY=
LLMONKEY_COHERE_API_KEY=
LLMONKEY_IONOS_API_KEY=
LLMONKEY_MISTRAL_API_KEY=
LLMONKEY_AZURE_OPENAI_URL=
LLMONKEY_AZURE_INFERENCE_URL=
LLMONKEY_AZURE_API_KEY=
