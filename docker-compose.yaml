services:
  backend:
    image: visual_data_map/backend
    build:
      context: ./
      dockerfile: ./docker/backend.Dockerfile
    volumes:
      - quiddity_data:/data
    # ports:  # expose port outside of this virtual network
    #   - "127.0.0.1:55125:55125"
    environment:
      - data_backend_host=http://localhost:55125
      - postgres_host=postgres
      - BACKEND_AUTHENTICATION_SECRET
      - backend_host=http://localhost:55125
      - vector_database_host=qdrant
      - search_engine_host=opensearch
      - GPU_UTILITY_SERVER_URL=http://gpu-utility-server:55180
      - PDFERRET_BASE_URL=http://pdferret:80
      - LOCAL_MODEL_SERVER_URL=http://infinity-model-server:55181
  webserver:
    image: visual_data_map/webserver
    build:
      context: ./frontend
      dockerfile: ../docker/webserver.Dockerfile
    ports:  # this should be the only port in this docker compose setup that is exposed to the outside (except DB dashboards)
      - "${WEBSERVER_EXPOSED_IP_V4:-127.0.0.1}:55140:55140"
      - "${WEBSERVER_EXPOSED_IP_V6:-[::1]}:55140:55140"
    environment:
      - backend_host=http://backend:55125
  gpu-utility-server:
    image: visual_data_map/gpu_utility_server
    build:
      context: ./
      dockerfile: ./docker/gpu_utility_server.Dockerfile
    # ports:  # expose port outside of this virtual network
    #   - "127.0.0.1:55180:55180"
  qdrant:
    image: "qdrant/qdrant:latest"
    volumes:
      - qdrant_storage:/qdrant/storage
    ports:  # expose port outside of this virtual network
      - "${QDRANT_EXPOSED_IP:-127.0.0.1}:${QDRANT_EXPOSED_PORT:-6333}:6333"  # needed for qdrant web dashboard
  opensearch:
    image: "opensearchproject/opensearch:latest"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
      - ./docker/resources/german_decompound.txt:/usr/share/opensearch/config/german_decompound.txt
      - ./docker/resources/german_synonym.txt:/usr/share/opensearch/config/german_synonym.txt
      - ./docker/resources/hyphenation_patterns_de_DR.xml:/usr/share/opensearch/config/hyphenation_patterns_de_DR.xml
    # ports:  # expose port outside of this virtual network
    #   - "127.0.0.1:9200:9200"
    #   - "127.0.0.1:9600:9600"
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358,http://tim-desktop:1358
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD
  postgres:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=visdatamap
    ports:  # expose port outside of this virtual network
      - "127.0.0.1:${POSTGRES_EXPOSED_PORT:-5432}:5432"
    # expose port to be able to use export scripts from outside the virtual network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:  # exposed to the outside, remember to use a secure password
      - "${OPENSEARCH_DASHBOARD_EXPOSED_IP:-127.0.0.1}:${OPENSEARCH_DASHBOARD_EXPOSED_PORT:-5601}:5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'

  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    profiles:
      - https_proxy  # the container only starts if env variable COMPOSE_PROFILES=https_proxy
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - URL=${SERVER_URL}
      - VALIDATION=http
      # - SUBDOMAINS=www, #optional
      # - CERTPROVIDER= #optional
      # - DNSPLUGIN=cloudflare #optional
      # - PROPAGATION= #optional
      - EMAIL=${SSL_CERT_EMAIL}
    volumes:
      - ./swag_https_proxy_config:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped

  infinity-model-server:
    image: michaelf34/infinity:latest
    volumes:
      - infinity_model_cache:/app/.cache
    # ports:  # expose port outside of this virtual network
    #   - 127.0.0.1:55181:55181
    command: # add any models needed, e.g. CLIP
      - v2
      - --model-id
      - intfloat/e5-base-v2
      - --model-id
      - intfloat/multilingual-e5-base
      - --model-id
      - intfloat/multilingual-e5-large-instruct
      - --model-id
      - allenai/specter2_base
      - --port
      - "55181"


volumes:
  quiddity_data:
  qdrant_storage:
  opensearch_data:
  postgres_data:
  infinity_model_cache:
  swag_data:
networks:
  default:
    name: visualdatamapnetwork
